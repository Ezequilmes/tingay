rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read other users' profiles for discovery
    match /users/{userId} {
      allow read: if request.auth != null;
    }
    
    // Allow users to update their own online status
    match /users/{userId} {
      allow update: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['onlineStatus', 'isOnline', 'lastActive']);
    }
    
    // Chat messages
    match /chats/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
    
    // Hearts and matches
    match /hearts/{heartId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
    }
    
    match /matches/{matchId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.users;
    }
  }
}